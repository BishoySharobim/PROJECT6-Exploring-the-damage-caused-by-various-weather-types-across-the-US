
```{r - extra code, eval=FALSE, echo=FALSE}

#Property + crop damage.
    A <- aggregate(TOTALDMG ~ EVTYPE, Stormdata6, sum)
    s5 <- unlist(sort(A[,2], index.return=TRUE, decreasing=TRUE)[2])
    A[s5,]
    
#Injuries + Fatalities.
    A3 <- aggregate(INJURIES + FATALITIES ~ EVTYPE, Stormdata3, sum)
    B3 <- A3[unlist(sort(A3[,2], index.return=TRUE, decreasing=TRUE)[2]),]
    C3 <- B3[1:10,]


#METHOD 1:Finding high fatalties and injuries   
    s1 <- sort(StormdataFI0$FATALITIES, index.return=TRUE,decreasing = TRUE)
    Highfatal <- lapply(s1, function(x){head(x, n)})
    Highfataldf <- as.data.frame(Highfatal, col.names= c("No.of.fatalities", "Index"))
    
    s2 <- sort(StormdataFI0$INJURIES, index.return=TRUE, decreasing=TRUE)
    Highinjuries <-lapply(s2, function(x){head(x, n)})
    Highinjuriesdf <- as.data.frame(Highinjuries, col.names= c("No.of.injuries", "Index"))
    
    combineddf <- data.frame(Highfataldf, Highinjuriesdf)

    
    #Finding indices of observations with high fatalties and high injuries (IOFHFHI).
    IOFHFHI <- combineddf[which(combineddf[,2] %in% combineddf[,4]), 2]
    length(IOFHFHI)
    
    
    #Which events caused these high values (ECTHV) in descending order of human casualties?
    ECTHV <- StormdataFI0[IOFHFHI, 3]
    ECTHVdf <- data.frame(summary(ECTHV))
    ECTHVdf
    
    
    #Sorting the total damage values and returns a dataframe arranged in descending amount of total damage and right column with index. 
    s4 <- sort(Stormdata6$"TOTALDMG", index.return=TRUE, decreasing=TRUE)
    HIGHDMG <- lapply(s4, function(x){head(x, n)})
    HIGHDMGdf <- as.data.frame(HIGHDMG, col.names= c("TOTALDMG", "Index")) 
```

